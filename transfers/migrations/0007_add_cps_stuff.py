# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-03 17:26
from __future__ import unicode_literals
from django.db import migrations
from cps_migration.settings import BASE_DIR
from transfers.models import School
import csv

### START CONFIG ###
data_dir = BASE_DIR + '/data/processed/'
cps_id_filename = data_dir + 'rcdts-cps_equivalency.csv'
cps_stuff_filename = data_dir + 'cps_school_locations.csv'
fail_log_path = '/tmp/cps-failed-lookups.csv'
### END CONFIG ###

def add_cps_id(apps,schema_editor):
    cps_id_csv = [x for x in csv.DictReader(open(cps_id_filename))]
    fail_log = open(fail_log_path,'w')
    fail_csv = csv.DictWriter(fail_log,['RCDTS_CODE','SCHOOL_SHORT_NAME','SCHOOL_ID'])
    fail_csv.writeheader()
    for row in cps_id_csv:
        schools = School.objects.filter(rcdts=row['RCDTS_CODE'])
        if schools and len(schools) == 1:
            school = schools[0]
            print school.name, row['SCHOOL_SHORT_NAME']
            school.cps_id = int(row['SCHOOL_ID'])
            school.save()
        else:
            print('lookup failed:',row)
            fail_csv.writerow(row)
    fail_log.close()


def update_cps_data(apps,schema_editor):
    cps_stuff_csv = [x for x in csv.DictReader(open(cps_stuff_filename))]
    for row in cps_stuff_csv:
        schools = School.objects.filter(cps_id = int(row['School_ID']))
        if schools and len(schools) == 1:
            school = schools[0]
            school.comm_area_name = row['COMMAREA']
            school.lat = float(row['Lat'])
            school.long = float(row['Long'])
            school.save()
        else:
            print('lookup failed:',row)


class Migration(migrations.Migration):

    dependencies = [
        ('transfers', '0006_closed_schools'),
    ]

    operations = [
            migrations.RunPython(add_cps_id),
            migrations.RunPython(update_cps_data),
    ]
